openapi: 3.0.3
info:
  title: Real-Time Flight Tracker API
  description: API for real-time flight tracking dashboard with WebSocket support
  version: 1.0.0
  contact:
    name: Flight Tracker Team
    email: support@flighttracker.com

servers:
  - url: http://localhost:8080
    description: Development server
  - url: ws://localhost:8080
    description: WebSocket server

paths:
  /health:
    get:
      summary: Health Check
      description: Returns the health status of the application
      tags:
        - Health
      responses:
        '200':
          description: Application is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
              example:
                status: "healthy"
                timestamp: "2024-01-01T12:00:00Z"
                version: "1.0.0"
                services:
                  kafka: "connected"
                  websocket: "active"
                uptime: "2h30m15s"

  /ready:
    get:
      summary: Readiness Check
      description: Returns the readiness status of the application
      tags:
        - Health
      responses:
        '200':
          description: Application is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessStatus'
              example:
                status: "ready"
                timestamp: "2024-01-01T12:00:00Z"

  /metrics:
    get:
      summary: Prometheus Metrics
      description: Returns Prometheus metrics for monitoring
      tags:
        - Monitoring
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string
              example: |
                # HELP flight_fetch_duration_seconds Time taken to fetch flight data
                # TYPE flight_fetch_duration_seconds histogram
                flight_fetch_duration_seconds_bucket{le="0.1"} 0

  /ws:
    get:
      summary: WebSocket Connection
      description: Establishes WebSocket connection for real-time flight data
      tags:
        - WebSocket
      parameters:
        - name: token
          in: query
          required: true
          description: Authentication token
          schema:
            type: string
            example: "84cdb6c6cdaba1ca7a862f158bc5afb07729b90361c6086f8a5947e3d6aacc3c"
      responses:
        '101':
          description: WebSocket connection established
        '401':
          description: Invalid or missing token
        '400':
          description: Bad request

components:
  schemas:
    FlightData:
      type: object
      required:
        - icao24
        - callsign
        - origin_country
        - longitude
        - latitude
        - on_ground
        - velocity
        - true_track
        - vertical_rate
        - geo_altitude
      properties:
        icao24:
          type: string
          description: Unique aircraft identifier
          example: "MOCK0001"
        callsign:
          type: string
          description: Flight callsign
          example: "TEST123"
        origin_country:
          type: string
          description: Country of origin
          example: "United States"
        longitude:
          type: number
          format: double
          description: Aircraft longitude
          example: -74.0060
        latitude:
          type: number
          format: double
          description: Aircraft latitude
          example: 40.7128
        on_ground:
          type: boolean
          description: Whether aircraft is on ground
          example: false
        velocity:
          type: number
          format: double
          description: Aircraft velocity in m/s
          example: 250.5
        true_track:
          type: number
          format: double
          description: Aircraft heading in degrees
          example: 180.0
        vertical_rate:
          type: number
          format: double
          description: Vertical rate in m/s
          example: 5.2
        geo_altitude:
          type: number
          format: double
          description: Geometric altitude in meters
          example: 10000.0

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        version:
          type: string
          example: "1.0.0"
        services:
          type: object
          additionalProperties:
            type: string
          example:
            kafka: "connected"
            websocket: "active"
        uptime:
          type: string
          example: "2h30m15s"

    ReadinessStatus:
      type: object
      properties:
        status:
          type: string
          enum: [ready, not_ready]
          example: "ready"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"

  securitySchemes:
    TokenAuth:
      type: apiKey
      in: query
      name: token
      description: WebSocket authentication token

tags:
  - name: Health
    description: Health and readiness checks
  - name: Monitoring
    description: Application monitoring and metrics
  - name: WebSocket
    description: Real-time WebSocket connections