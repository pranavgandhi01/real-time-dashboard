{
  "info": {
    "name": "Real-Time Flight Tracker API",
    "description": "API collection for testing the Real-Time Flight Tracker application",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "websocketToken",
      "value": "84cdb6c6cdaba1ca7a862f158bc5afb07729b90361c6086f8a5947e3d6aacc3c",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check application health status"
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": ["{{baseUrl}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-01-01T12:00:00Z\",\n  \"version\": \"1.0.0\",\n  \"services\": {\n    \"kafka\": \"connected\",\n    \"websocket\": \"active\"\n  },\n  \"uptime\": \"2h30m15s\"\n}"
            }
          ]
        },
        {
          "name": "Readiness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/ready",
              "host": ["{{baseUrl}}"],
              "path": ["ready"]
            },
            "description": "Check application readiness status"
          },
          "response": [
            {
              "name": "Ready Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/ready",
                  "host": ["{{baseUrl}}"],
                  "path": ["ready"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"ready\",\n  \"timestamp\": \"2024-01-01T12:00:00Z\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Monitoring",
      "item": [
        {
          "name": "Prometheus Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["metrics"]
            },
            "description": "Get Prometheus metrics for monitoring"
          },
          "response": [
            {
              "name": "Metrics Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/metrics",
                  "host": ["{{baseUrl}}"],
                  "path": ["metrics"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "# HELP flight_fetch_duration_seconds Time taken to fetch flight data\n# TYPE flight_fetch_duration_seconds histogram\nflight_fetch_duration_seconds_bucket{le=\"0.1\"} 0\nflight_fetch_duration_seconds_bucket{le=\"0.25\"} 0\nflight_fetch_duration_seconds_bucket{le=\"0.5\"} 1\nflight_fetch_duration_seconds_bucket{le=\"1\"} 1\nflight_fetch_duration_seconds_bucket{le=\"2.5\"} 1\nflight_fetch_duration_seconds_bucket{le=\"5\"} 1\nflight_fetch_duration_seconds_bucket{le=\"10\"} 1\nflight_fetch_duration_seconds_bucket{le=\"+Inf\"} 1\nflight_fetch_duration_seconds_sum 0.3\nflight_fetch_duration_seconds_count 1"
            }
          ]
        }
      ]
    },
    {
      "name": "WebSocket",
      "item": [
        {
          "name": "WebSocket Connection Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Upgrade",
                "value": "websocket"
              },
              {
                "key": "Connection",
                "value": "Upgrade"
              },
              {
                "key": "Sec-WebSocket-Key",
                "value": "dGhlIHNhbXBsZSBub25jZQ=="
              },
              {
                "key": "Sec-WebSocket-Version",
                "value": "13"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/ws?token={{websocketToken}}",
              "host": ["{{baseUrl}}"],
              "path": ["ws"],
              "query": [
                {
                  "key": "token",
                  "value": "{{websocketToken}}"
                }
              ]
            },
            "description": "Test WebSocket connection (Note: Use a WebSocket client for actual testing)"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic timestamp",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test('Status code is 200', function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "pm.test('Response time is less than 1000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
          "});"
        ]
      }
    }
  ]
}